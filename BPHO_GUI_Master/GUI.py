import tkinter as tk
import C1
import C2
import C3_IP
import C3_OP
import C4_IP
import C4_OP
import C5
import C6
import C7_IP
import C7_OP
import C7_3D_IP
import C7_3D_OP

root = tk.Tk()
root.geometry("800x800")
root['bg']='steel blue'
root.title("BPhO Controls")

label = tk.Label(root, text="BPhO Computational Challenge 2023", bg="grey18", fg="snow", font=('Arial', 18))
label.pack(padx=10, pady=10)
label = tk.Label(root, text="Solar System Orbits", bg="grey18", fg="snow", font=('Arial', 18))
label.pack(padx=10, pady=10)
label = tk.Label(root, text="Below are the controls for the Challenges:", bg="grey18", fg="snow", font=('Arial', 13))
label.pack(padx=10, pady=10)

def W1():
    one = tk.Tk()
    one.geometry("800x800")
    one.title("Challenge 1")
    label = tk.Label(one, text="Kepler's 3 Laws", bg="grey18", fg="snow", font=('Arial', 18))
    label.pack(padx=10, pady=10)
    one['bg']='steel blue'
    label = tk.Label(one, bg="dark slate gray", fg="snow", text="1. The orbit of every planet in the solar system is an elipse with the Sun at one of the Two foci.", font=('Arial', 10))
    label.pack(padx=10, pady=10)
    label = tk.Label(one, bg="dark slate gray", fg="snow", text="2. A line joining a planet and the Sun sweeps out equal areas during equal intervals of time.", font=('Arial', 10))
    label.pack(padx=10, pady=10)
    label = tk.Label(one, bg="dark slate gray", fg="snow", text="3. The square of the orbital period of a planet is directly proportional to the cube of the semi-major axis of its orbit.", font=('Arial', 10))
    label.pack(padx=10, pady=10)
    btnC1 = tk.Button(one, text="Display Graph", font=('Arial', 18), command=C1.Challenge1)
    btnC1.pack(padx=10, pady=10)

def W2():
    two = tk.Tk()
    two.geometry("800x800")
    two.title("Challenge 2")
    two['bg']='steel blue'
    label = tk.Label(two, text="Eliptical Orbits", bg="grey18", fg="snow", font=('Arial', 18))
    label.pack(padx=10, pady=10)
    label = tk.Label(two, bg="dark slate gray", fg="snow", text="This will display the eliptical orbits of the following planets!", font=('Arial', 10))
    label.pack(padx=10, pady=10)
    Inner = tk.Button(two, text="Inner Planets", font=('Arial', 18), command=C2.IP)
    Inner.pack(padx=10, pady=10)
    Outer = tk.Button(two, text="Outer Planets", font=('Arial', 18), command=C2.OP)
    Outer.pack(padx=10, pady=10)
    All = tk.Button(two, text="All Planets", font=('Arial', 18), command=C2.ALL)
    All.pack(padx=10, pady=10)

def W3():
    three = tk.Tk()
    three.geometry("800x800")
    three.title("Challenge 3")
    three['bg']='steel blue'
    label = tk.Label(three, text="2D Animation of the Solar System Orbits", bg="grey18", fg="snow", font=('Arial', 18))
    label.pack(padx=10, pady=10)
    btnC3IP = tk.Button(three, text="Challenge 3 - Inner Planets", font=('Arial', 18), command=lambda:C3_IP.c3IP(speedslider.get()))
    btnC3IP.pack(padx=10, pady=10)
    btnC3OP = tk.Button(three, text="Challenge 3 - Outer Planets", font=('Arial', 18), command=lambda:C3_OP.c3OP(speedslider.get()))
    btnC3OP.pack(padx=10, pady=10)
    speedwarning=tk.Label(three, bg="dark slate gray", fg="snow", text="Use the slider below to select a speed for the animation. This must be selected before choosing an option.")
    speedwarning.pack()
    speedslider = tk.Scale(three, from_=1, to=20, orient='horizontal')
    speedslider.pack()

def W4():
    four = tk.Tk()
    four.geometry("800x800")
    four.title("Challenge 4")
    four['bg']='steel blue'
    label = tk.Label(four, text="3D Animation of the Solar System Orbits", bg="grey18", fg="snow", font=('Arial', 18))
    label.pack(padx=10, pady=10)
    btnC4IP = tk.Button(four, text="Challenge 4 - Inner Planets", font=('Arial', 18), command=lambda:C4_IP.c4IP(speedslider.get(), viewslider.get()))
    btnC4IP.pack(padx=10, pady=10)
    btnC4OP = tk.Button(four, text="Challenge 4 - Outer Planets", font=('Arial', 18), command=lambda:C4_OP.c4OP(speedslider.get(), viewslider.get()))
    btnC4OP.pack(padx=10, pady=10)
    speedwarning=tk.Label(four, bg="dark slate gray", fg="snow", text="Use the slider below to select a speed for the animation. This must be selected before choosing an option.")
    speedwarning.pack()
    speedslider = tk.Scale(four, from_=1, to=20, orient='horizontal')
    speedslider.pack()
    viewwarning=tk.Label(four, bg="dark slate gray", fg="snow", text="Different viewpoints are supported for Challenge 4. Please select an option from 0-5 below.")
    viewwarning.pack()
    viewtypes=tk.Label(four, bg="dark slate gray", fg="snow", text="Angled left = 0")
    viewtypes.pack()
    viewtypes=tk.Label(four, bg="dark slate gray", fg="snow", text="Footprint = 1")
    viewtypes.pack()
    viewtypes=tk.Label(four, bg="dark slate gray", fg="snow", text="Draft = 2")
    viewtypes.pack()
    viewtypes=tk.Label(four, bg="dark slate gray", fg="snow", text="Elevation = 3")
    viewtypes.pack()
    viewtypes=tk.Label(four, bg="dark slate gray", fg="snow", text="Angled right = 4")
    viewtypes.pack()
    viewtypes=tk.Label(four, bg="dark slate gray", fg="snow", text="General ax. = 5")
    viewtypes.pack()
    viewslider = tk.Scale(four, from_=0, to=5, orient='horizontal')
    viewslider.pack() 

def W5():
    five = tk.Tk()
    five.geometry("800x800")
    five.title("Challenge 5")
    five['bg']='steel blue'
    label = tk.Label(five, text="Orbit Angle vs Time", bg="grey18", fg="snow", font=('Arial', 18))
    label.pack(padx=10, pady=10)
    label = tk.Label(five, bg="dark slate gray", fg="snow", text="Orbit Angle vs Time for an eccentric orbit and compared to a circular version with the same period.", font=('Arial', 10))
    label.pack(padx=10, pady=10)
    label = tk.Label(five, bg="dark slate gray", fg="snow", text="To evaluate the angle integral, the Simpson's rule is used.", font=('Arial', 10))
    label.pack(padx=10, pady=10)
    label = tk.Label(five, bg="dark slate gray", fg="snow", text="It approximates the integrand of an integral with a series of quadratic curve segments.", font=('Arial', 10))
    label.pack(padx=10, pady=10)
    mer = tk.Button(five, text="Mercury", font=('Arial', 18), command=C5.ME)
    mer.pack(padx=10, pady=10)          
    ven = tk.Button(five, text="Venus", font=('Arial', 18), command=C5.VE)
    ven.pack(padx=10, pady=10)
    ear = tk.Button(five, text="Earth", font=('Arial', 18), command=C5.EA)
    ear.pack(padx=10, pady=10)
    mar = tk.Button(five, text="Mars", font=('Arial', 18), command=C5.MA)
    mar.pack(padx=10, pady=10)
    jup = tk.Button(five, text="Jupiter", font=('Arial', 18), command=C5.JU)
    jup.pack(padx=10, pady=10)
    sat = tk.Button(five, text="Saturn", font=('Arial', 18), command=C5.SA)
    sat.pack(padx=10, pady=10)
    ura = tk.Button(five, text="Uranus", font=('Arial', 18), command=C5.UR)
    ura.pack(padx=10, pady=10)
    nep = tk.Button(five, text="Neptune", font=('Arial', 18), command=C5.NE)
    nep.pack(padx=10, pady=10)
    plu = tk.Button(five, text="Pluto", font=('Arial', 18), command=C5.PL)
    plu.pack(padx=10, pady=10)


def W6():
    six = tk.Tk()
    six.geometry("800x800")
    six.title("Challenge 6")
    six['bg']='steel blue'
    label = tk.Label(six, text="Solar System Spirograph", bg="grey18", fg="snow", font=('Arial', 18))
    label.pack(padx=10, pady=10)
    btnC6 = tk.Button(six, text="Challenge 6 - Run Module", font=('Arial', 18), command=lambda:C6.Challenge6([mercuryb.get(), venusb.get(), earthb.get(), marsb.get(), jupiterb.get(), saturnb.get(), uranusb.get(), neptuneb.get(), plutob.get()], graphscale.get()))
    btnC6.pack(padx=10, pady=10)
    introlabel=tk.Label(six, text="This challenge produces a spirograph of two selected planets. You must select TWO planets below for the program to work.")
    introlabel.pack()
    mercuryb=tk.Scale(six, from_=0, to=1, orient='horizontal')
    mercuryb.pack()
    mercuryl=tk.Label(six, bg="dark slate gray", fg="snow", text="Mercury")
    mercuryl.pack()
    venusb=tk.Scale(six, from_=0, to=1, orient='horizontal')
    venusb.pack()
    venusl=tk.Label(six, bg="dark slate gray", fg="snow", text="Venus")
    venusl.pack()
    earthb=tk.Scale(six, from_=0, to=1, orient='horizontal')
    earthb.pack()
    earthl=tk.Label(six, bg="dark slate gray", fg="snow", text="Earth")
    earthl.pack()
    marsb=tk.Scale(six, from_=0, to=1, orient='horizontal')
    marsb.pack()
    marsl=tk.Label(six, bg="dark slate gray", fg="snow", text="Mars")
    marsl.pack()
    jupiterb=tk.Scale(six, from_=0, to=1, orient='horizontal')
    jupiterb.pack()
    jupiterl=tk.Label(six, bg="dark slate gray", fg="snow", text="Jupiter")
    jupiterl.pack()
    saturnb=tk.Scale(six, from_=0, to=1, orient='horizontal')
    saturnb.pack()
    saturnl=tk.Label(six, bg="dark slate gray", fg="snow", text="Saturn")
    saturnl.pack()
    uranusb=tk.Scale(six, from_=0, to=1, orient='horizontal')
    uranusb.pack()
    uranusl=tk.Label(six, bg="dark slate gray", fg="snow", text="Uranus")
    uranusl.pack()
    neptuneb=tk.Scale(six, from_=0, to=1, orient='horizontal')
    neptuneb.pack()
    neptunel=tk.Label(six, bg="dark slate gray", fg="snow", text="Neptune")
    neptunel.pack()
    plutob=tk.Scale(six, from_=0, to=1, orient='horizontal')
    plutob.pack()
    plutol=tk.Label(six, bg="dark slate gray", fg="snow", text="Pluto")
    plutol.pack()
    midlabel=tk.Label(six, bg="dark slate gray", fg="snow", text="A slider value of 0 indicates that a planet is deselected, whereas a slider value of 1 indicates a planet selection.")
    midlabel.pack()
    outlabel=tk.Label(six, text="Scale will need to be adjusted for different planets")
    outlabel.pack()
    graphscale=tk.Scale(six, from_=0, to=200, orient='horizontal')
    graphscale.pack()

def W7():
    IN = tk.Tk()
    IN.geometry("800x800")
    IN.title("Challenge 7 - 2D")
    IN['bg']='steel blue'
    label = tk.Label(IN, text="Chosen object at the Centre", bg="grey18", fg="snow", font=('Arial', 18))
    label.pack(padx=10, pady=10)
    Inner = tk.Label(IN, text="Inner Planets 2D", bg="grey18", fg="snow", font=('Arial', 18))
    Inner.pack()          
    mer = tk.Button(IN, text="Mercury", font=('Arial', 18), command=C7_IP.ME)
    mer.pack(padx=10, pady=10)          
    ven = tk.Button(IN, text="Venus", font=('Arial', 18), command=C7_IP.VE)
    ven.pack(padx=10, pady=10)
    ear = tk.Button(IN, text="Earth", font=('Arial', 18), command=C7_IP.EA)
    ear.pack(padx=10, pady=10)
    mar = tk.Button(IN, text="Mars", font=('Arial', 18), command=C7_IP.MA)
    mar.pack(padx=10, pady=10)
    
    Outer = tk.Label(IN, text="Outer Planets 2D", bg="grey18", fg="snow", font=('Arial', 18))
    Outer.pack()
    jup = tk.Button(IN, text="Jupiter", font=('Arial', 18), command=C7_OP.JU)
    jup.pack(padx=10, pady=10)
    sat = tk.Button(IN, text="Saturn", font=('Arial', 18), command=C7_OP.SA)
    sat.pack(padx=10, pady=10)
    ura = tk.Button(IN, text="Uranus", font=('Arial', 18), command=C7_OP.UR)
    ura.pack(padx=10, pady=10)
    nep = tk.Button(IN, text="Neptune", font=('Arial', 18), command=C7_OP.NE)
    nep.pack(padx=10, pady=10)
    plu = tk.Button(IN, text="Pluto", font=('Arial', 18), command=C7_OP.PL)
    plu.pack(padx=10, pady=10)

    OU = tk.Tk()
    OU.geometry("800x800")
    OU['bg']='steel blue'
    label = tk.Label(OU, text="Chosen Object at the Centre", bg="grey18", fg="snow", font=('Arial', 18))
    label.pack(padx=10, pady=10)
    OU.title("Challenge 7 - 3D")
    btnC7IP = tk.Button(OU, text="Challenge 7- Inner Planets", font=('Arial', 18), command=lambda:C7_3D_IP.IP72(viewslider.get(),ipslider.get()))
    btnC7IP.pack(padx=10, pady=10)
    btnC7OP = tk.Button(OU, text="Challenge 7 - Outer Planets", font=('Arial', 18), command=lambda:C7_3D_OP.OP72(viewslider.get(),opslider.get()))
    btnC7OP.pack(padx=10, pady=10)
    viewwarning=tk.Label(OU, bg="dark slate gray", fg="snow", text="Different viewpoints are supported for Challenge7. Please select an option from 0-5 below.")
    viewwarning.pack()
    viewtypes=tk.Label(OU, bg="dark slate gray", fg="snow", text="Angled left = 0")
    viewtypes.pack()
    viewtypes=tk.Label(OU, bg="dark slate gray", fg="snow", text="Footprint = 1")
    viewtypes.pack()
    viewtypes=tk.Label(OU, bg="dark slate gray", fg="snow", text="Draft = 2")
    viewtypes.pack()
    viewtypes=tk.Label(OU, bg="dark slate gray", fg="snow", text="Elevation = 3")
    viewtypes.pack()
    viewtypes=tk.Label(OU, bg="dark slate gray", fg="snow", text="Angled right = 4")
    viewtypes.pack()
    viewtypes=tk.Label(OU, bg="dark slate gray", fg="snow", text="General ax. = 5")
    viewtypes.pack()
    viewslider = tk.Scale(OU, from_=0, to=5, orient='horizontal')
    viewslider.pack()
    ipwarning=tk.Label(OU, bg="dark slate gray", fg="snow", text="INNER PLANETS: Choose centre planet 0 = Mercury, 1 = Venus, 2 = Earth, 3 = Mars")
    ipwarning.pack()
    ipslider = tk.Scale(OU, bg="dark slate gray", fg="snow", from_=0, to=3, orient='horizontal')
    ipslider.pack()
    opwarning=tk.Label(OU, text="OUTER PLANETS: Choose centre planet 0 = Jupiter, 1 = Saturn, 2 = Uranus, 3 = Neptune")
    opwarning.pack()
    opslider = tk.Scale(OU, from_=0, to=3, orient='horizontal')
    opslider.pack()
    
btnC1 = tk.Button(root, text="Challenge 1", font=('Arial', 18), command=W1)
btnC1.pack(padx=10, pady=10)

btnC2 = tk.Button(root, text="Challenge 2", font=('Arial', 18), command=W2)
btnC2.pack(padx=10, pady=10)

btnC3 = tk.Button(root, text="Challenge 3", font=('Arial', 18), command=W3)
btnC3.pack(padx=10, pady=10)

btnC4 = tk.Button(root, text="Challenge 4", font=('Arial', 18), command=W4)
btnC4.pack(padx=10, pady=10)

btnC5 = tk.Button(root, text="Challenge 5", font=('Arial', 18), command=W5)
btnC5.pack(padx=10, pady=10)

btnC6 = tk.Button(root, text="Challenge 6", font=('Arial', 18), command=W6)
btnC6.pack(padx=10, pady=10)

btnC7 = tk.Button(root, text="Challenge 7", font=('Arial', 18), command=W7)
btnC7.pack(padx=10, pady=10)

root.mainloop()


